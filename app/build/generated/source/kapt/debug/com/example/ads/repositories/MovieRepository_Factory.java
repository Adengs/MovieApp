// Generated by Dagger (https://dagger.dev).
package com.example.ads.repositories;

import com.example.ads.connection.ApiServices;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class MovieRepository_Factory implements Factory<MovieRepository> {
  private final Provider<ApiServices> movieApiProvider;

  public MovieRepository_Factory(Provider<ApiServices> movieApiProvider) {
    this.movieApiProvider = movieApiProvider;
  }

  @Override
  public MovieRepository get() {
    return newInstance(movieApiProvider.get());
  }

  public static MovieRepository_Factory create(Provider<ApiServices> movieApiProvider) {
    return new MovieRepository_Factory(movieApiProvider);
  }

  public static MovieRepository newInstance(ApiServices movieApi) {
    return new MovieRepository(movieApi);
  }
}
