// Generated by view binder compiler. Do not edit!
package com.example.ads.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ads.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnRetry;

  @NonNull
  public final EditText etSearch;

  @NonNull
  public final LinearLayout layFailed;

  @NonNull
  public final ProgressBar progressbar;

  @NonNull
  public final RecyclerView rvMovie;

  @NonNull
  public final RecyclerView rvTabCategory;

  @NonNull
  public final TextView tvFailed;

  @NonNull
  public final TextView tvNotFound;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull Button btnRetry,
      @NonNull EditText etSearch, @NonNull LinearLayout layFailed, @NonNull ProgressBar progressbar,
      @NonNull RecyclerView rvMovie, @NonNull RecyclerView rvTabCategory,
      @NonNull TextView tvFailed, @NonNull TextView tvNotFound) {
    this.rootView = rootView;
    this.btnRetry = btnRetry;
    this.etSearch = etSearch;
    this.layFailed = layFailed;
    this.progressbar = progressbar;
    this.rvMovie = rvMovie;
    this.rvTabCategory = rvTabCategory;
    this.tvFailed = tvFailed;
    this.tvNotFound = tvNotFound;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_retry;
      Button btnRetry = ViewBindings.findChildViewById(rootView, id);
      if (btnRetry == null) {
        break missingId;
      }

      id = R.id.et_search;
      EditText etSearch = ViewBindings.findChildViewById(rootView, id);
      if (etSearch == null) {
        break missingId;
      }

      id = R.id.lay_failed;
      LinearLayout layFailed = ViewBindings.findChildViewById(rootView, id);
      if (layFailed == null) {
        break missingId;
      }

      id = R.id.progressbar;
      ProgressBar progressbar = ViewBindings.findChildViewById(rootView, id);
      if (progressbar == null) {
        break missingId;
      }

      id = R.id.rv_movie;
      RecyclerView rvMovie = ViewBindings.findChildViewById(rootView, id);
      if (rvMovie == null) {
        break missingId;
      }

      id = R.id.rv_tab_category;
      RecyclerView rvTabCategory = ViewBindings.findChildViewById(rootView, id);
      if (rvTabCategory == null) {
        break missingId;
      }

      id = R.id.tv_failed;
      TextView tvFailed = ViewBindings.findChildViewById(rootView, id);
      if (tvFailed == null) {
        break missingId;
      }

      id = R.id.tv_not_found;
      TextView tvNotFound = ViewBindings.findChildViewById(rootView, id);
      if (tvNotFound == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, btnRetry, etSearch, layFailed,
          progressbar, rvMovie, rvTabCategory, tvFailed, tvNotFound);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
