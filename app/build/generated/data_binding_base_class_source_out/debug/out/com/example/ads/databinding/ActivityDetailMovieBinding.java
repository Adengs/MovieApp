// Generated by view binder compiler. Do not edit!
package com.example.ads.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ads.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailMovieBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView actor;

  @NonNull
  public final TextView descMovie;

  @NonNull
  public final TextView director;

  @NonNull
  public final TextView duration;

  @NonNull
  public final TextView genre;

  @NonNull
  public final ImageView ivBack;

  @NonNull
  public final LinearLayout layCast;

  @NonNull
  public final LinearLayout layDirector;

  @NonNull
  public final LinearLayout layHeader;

  @NonNull
  public final LinearLayout layPoster;

  @NonNull
  public final LinearLayout layYears;

  @NonNull
  public final ImageView poster;

  @NonNull
  public final ProgressBar progressbar;

  @NonNull
  public final TextView titleMovie;

  @NonNull
  public final TextView years;

  private ActivityDetailMovieBinding(@NonNull RelativeLayout rootView, @NonNull TextView actor,
      @NonNull TextView descMovie, @NonNull TextView director, @NonNull TextView duration,
      @NonNull TextView genre, @NonNull ImageView ivBack, @NonNull LinearLayout layCast,
      @NonNull LinearLayout layDirector, @NonNull LinearLayout layHeader,
      @NonNull LinearLayout layPoster, @NonNull LinearLayout layYears, @NonNull ImageView poster,
      @NonNull ProgressBar progressbar, @NonNull TextView titleMovie, @NonNull TextView years) {
    this.rootView = rootView;
    this.actor = actor;
    this.descMovie = descMovie;
    this.director = director;
    this.duration = duration;
    this.genre = genre;
    this.ivBack = ivBack;
    this.layCast = layCast;
    this.layDirector = layDirector;
    this.layHeader = layHeader;
    this.layPoster = layPoster;
    this.layYears = layYears;
    this.poster = poster;
    this.progressbar = progressbar;
    this.titleMovie = titleMovie;
    this.years = years;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailMovieBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailMovieBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_detail_movie, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailMovieBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actor;
      TextView actor = ViewBindings.findChildViewById(rootView, id);
      if (actor == null) {
        break missingId;
      }

      id = R.id.desc_movie;
      TextView descMovie = ViewBindings.findChildViewById(rootView, id);
      if (descMovie == null) {
        break missingId;
      }

      id = R.id.director;
      TextView director = ViewBindings.findChildViewById(rootView, id);
      if (director == null) {
        break missingId;
      }

      id = R.id.duration;
      TextView duration = ViewBindings.findChildViewById(rootView, id);
      if (duration == null) {
        break missingId;
      }

      id = R.id.genre;
      TextView genre = ViewBindings.findChildViewById(rootView, id);
      if (genre == null) {
        break missingId;
      }

      id = R.id.iv_back;
      ImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.lay_cast;
      LinearLayout layCast = ViewBindings.findChildViewById(rootView, id);
      if (layCast == null) {
        break missingId;
      }

      id = R.id.lay_director;
      LinearLayout layDirector = ViewBindings.findChildViewById(rootView, id);
      if (layDirector == null) {
        break missingId;
      }

      id = R.id.lay_header;
      LinearLayout layHeader = ViewBindings.findChildViewById(rootView, id);
      if (layHeader == null) {
        break missingId;
      }

      id = R.id.lay_poster;
      LinearLayout layPoster = ViewBindings.findChildViewById(rootView, id);
      if (layPoster == null) {
        break missingId;
      }

      id = R.id.lay_years;
      LinearLayout layYears = ViewBindings.findChildViewById(rootView, id);
      if (layYears == null) {
        break missingId;
      }

      id = R.id.poster;
      ImageView poster = ViewBindings.findChildViewById(rootView, id);
      if (poster == null) {
        break missingId;
      }

      id = R.id.progressbar;
      ProgressBar progressbar = ViewBindings.findChildViewById(rootView, id);
      if (progressbar == null) {
        break missingId;
      }

      id = R.id.title_movie;
      TextView titleMovie = ViewBindings.findChildViewById(rootView, id);
      if (titleMovie == null) {
        break missingId;
      }

      id = R.id.years;
      TextView years = ViewBindings.findChildViewById(rootView, id);
      if (years == null) {
        break missingId;
      }

      return new ActivityDetailMovieBinding((RelativeLayout) rootView, actor, descMovie, director,
          duration, genre, ivBack, layCast, layDirector, layHeader, layPoster, layYears, poster,
          progressbar, titleMovie, years);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
